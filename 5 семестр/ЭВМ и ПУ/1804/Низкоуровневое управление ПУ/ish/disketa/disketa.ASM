.MODEL TINY
.DATA
about db 13,10,"* Лабораторная работа.",13,10,"Программа выполняет чтение boot-сектора дискеты (floppy drive A:),",13,10
abb   db "выводит содержимое boot-сектора на экран и в файл REZULT.TXT",13,10,13,10,"Hажмите любую клавишу...",13,10,'$'
buff  db 512 dup(?)
file1 db 'REZULT.TXT',0
error db "* Error: $"
err0  db "неизвестная ошибка.",13,10,'$'
err1  db "сектор не найден или испорчен.",13,10,'$'
err2  db "ошибка DMA.",13,10,'$'
err3  db "ошибка контроллера.",13,10,'$'
err4  db "нет отклика от дисковода. Попробуйте вставить дискету!",13,10,'$'
ok    db 13,10,"* Готово!",13,10,'$'
del   db 16                   ; для установки делителя (hex системы)
ent   db 26                   ; для подсчёта кол-ва выведенных кодов в строке
.CODE
ORG 100h
Start:
;****************************************************************************
;                        Инициализавия программы                            *
;****************************************************************************
      mov ah,9
      mov dx,offset about     ; вывод на экран информации about
      int 21h

      xor ax,ax               ; ожидание нажатия клавиши
      int 16h

;****************************************************************************
;    Установка регистров для чтения boot сектора в сегмент данных (buff)    *
;****************************************************************************
      push ds                 ; установка es = ds
      pop es                  ;
      mov bx,offset buff       ; в bx адрес массива buff с сегменте данных
      mov ah,2                ; функция 2 прерывания 13h - read/write sectors
      mov dh,0                 ; 0 - read / 1 - write
      mov ch,0                ; track/cylinder number (0..n)
      mov al,1                 ; sector count to read/write
      mov dl,0                ; drive number (0=drive A, ...)
      mov cl,1                 ; sector number (1..n)
      int 13h
      ; В регистре ah сейчас код ошибки, 0 - ошибки нет

;****************************************************************************
;                            Проверка на ошибки                             *
;****************************************************************************
      mov ch,ah
      test ah,ah              ; проверка на ошибки при чтении дискеты
      jnz @error

;****************************************************************************
;       Вывод содержимого boot-сектора на экран и в файл REZULT.TXT         *
;****************************************************************************
; Запись в файл: *
;*****************

      mov ah, 3Ch             ; * Создать файл
      mov cx, 32              ; Атрибуты файла (32 - normal file)
      mov dx, offset file1    ; Имя файла
      int 21h                 ; AX = filehandle, если все нормально

      mov bx, ax              ; копируем filehandle в регистр bx
      mov ah, 40h             ; * Записать в файл
      mov dx, offset buff     ; Что записывать (DS:DX содержит буфер)
      mov cx, 512             ; сколько байт записать
      int 21h                 ;

      mov ah, 3Eh             ; * Закрыть файл
      int 21h                 ;

;******************
; Вывод на экран: *
;******************

      mov cx,512              ; установка счётчика loop на 512
      xor bx,bx               ; bx - смещение в массиве buff

@lp:  mov al,buff[bx]         ; получаем код из массива buff
      xor ah,ah               ; обнуляем ah для операции деления
      div del                 ; получаем значение кода в hex-системе.

      push ax                 ; сохраним это значение

      cmp al,10               ; это цифра 0-9 или буква A-F?
      jl @less
      add al,7                ; увеличение кода символа до A..F
@less: add al,48              ; увеличение кода символа до 0..9
      mov ah,2               ;
      mov dl,al              ; Вывод на экран старшей части кода
      int 21h                ;

      pop dx                  ; восстановим значение кода в hex-системе
      mov dl,dh               ; теперь работаем с младшей частью

      cmp dl,10               ; это цифра 0-9 или буква A-F?
      jl @les1
      add dl,7                ; увеличение кода символа до A..F
@les1: add dl,48              ; увеличение кода символа до 0..9
      mov ah,2               ;
      int 21h                ; Вывод на экран младшей части кода

      mov ah,2                ;
      mov dl,32               ; Вывод на экран пробела
      int 21h                 ;

      mov ax,cx               ;
      div ent                 ; если в строке уже 26 символов, надо делать
      test ah,ah              ; переход на другую строку
      jnz @cont               ;

      mov ah,2                ;
      mov dl,13               ;
      int 21h                 ; Вывод <Enter> на экран
      mov ah,2                ;
      mov dl,10               ;
      int 21h                 ;

@cont: inc bx                 ; следующий элемент в массиве buff
       loop @lp

      mov ah,9                ;
      mov dx,offset ok        ; вывод на экран сообщения "* Готово!"
      int 21h                 ;

      jmp @end                ; конец

;****************************************************************************
;                     Анализ ошибки при чтении с дисковода A:               *
;****************************************************************************
@error:
      mov ah,9
      mov dx,offset error     ; вывод сообщения "* Error:"
      int 21h

      mov dx,offset err0      ; установка сообщения об неизвестной ошибке

      cmp ch,04h
      jnz @1
      mov dx,offset err1      ; ошибка: сектор не найден или испорчен
@1:   cmp ch,08h
      jnz @2
      mov dx,offset err2      ; ошибка: ошибка DMA
@2:   cmp ch,20h
      jnz @3
      mov dx,offset err3      ; ошибка: ошибка контроллера
@3:   cmp ch,80h
      jnz @4
      mov dx,offset err4      ; ошибка: нет отклика от дисковода

@4:   mov ah,9                ; вывод сообщения об ошибке на экран
      int 21h


@end: ret

END Start
END