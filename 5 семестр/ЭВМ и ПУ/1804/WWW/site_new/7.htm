<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=x-mac-cyrillic">
</head>

<body background="White_2.jpg" link="#0000FF" vlink="#0000FF" alink="#FF00FF">
<h2 align="center">КОДИРОВАНИЕ МИКРОПРОГРАММ</h2>
<p><br>
  На этом этапе важным моментом является определение начальных адресов участков 
  микропрограмм для различных команд проектируемой ЭВМ. Для БМУ с аппаратным формированием 
  начального адреса эти адреса определяются правилом работы соответствующего преобразователя 
  ПНА. Для БМУ без аппаратного формирования начального адреса, приведенного на 
  рис.3, начальные адреса определяются по кодам команд проектируемой ЭВМ. Рассмотрим 
  этот процесс более подробно.</p>
<p> При выполнении алгоритма в БМУ, приведенном на рис. 3, сначала определяется 
  уровень команды, при этом ветвление производится с помощью команд условного 
  перехода с использованием в качестве условий сигналов, поступающих с выхода 
  схемы формирования уровней СФУР. После разделения команд на 6 уровней в соответствии 
  с. рис.5 производится переход по коду команды внутри данного уровня. К шине 
  адреса ветвления (см.рис.3) могут подключаться либо старший, либо младший байты 
  регистра команд РК, поэтому при выборе начальных адресов необходимо следить, 
  чтобы не совпадали начальные адреса различных команд. Для хранения микрокоманд 
  может использоваться ПЗУ на 512 слов, что соответствует девятиразрядному адресу. 
</p>
<p> Начальные адреса команд уровня 1 (кроме байтовых) определяются кодами 00XXX1111 
  (Х=0 илй1) путем маскирования старшего байта регистра команд маской 000001111 
  и перехода по старшему байту РК. Например, команда MOV, имеющая в старшем байте 
  код 00001АААА (А биты, определяющие адресную часть команды в старшем байте), 
  получает начальный адрес 000011111; команды СМР имеют начальный адрес 000101111 
  и т.д. Необходимо отметить, что адрес 000001111 останется свободным, так как 
  среди команд первого уровня нет команд, имеющих подобный код. </p>
<p align="center"><img src="P8.gif" width="639" height="686"></p>
<p align="center">&nbsp;</p>
<p align="left">К уровню 2.1 относится только одна команда, и ее начальный адрес 
  может быть помещен в любую ячейку ПЗУ. К уровню 2.2 относятся одноадресные команды. 
  В этом уровне могут изменяться биты как в старшем, так и младшем байтах кода 
  команды. Разделение по командам в этом уровне осуществляется в два этапа: сначала 
  производится переход по старшему байту РК без маскирования (адреса 000001ХХХ), 
  а затем в БОД определяются биты 7 и 6 в младшем байте кода команды и производится 
  ветвление с использованием обычных микрокоманд условного перехода. Адреса ячеек, 
  куда производится переход, выбираются из свободных ячеек ПЗУ.<br>
  Начальные адреса команд уровня 3 определяются кодами 0X0000ХХХ при переходе 
  на адрес из старшего байта регистра команд.</p>
<p align="left"> Начальные адреса команд уровня 4 определяются кодами 1XXXXXXXX 
  (маска 100000000) при переходе на адрес по младшему байту регистра команд. </p>
<p align="left"> Начальные адреса команд уровня 5 определяются кодами 100000ХХХ 
  (маска 100000000) при переходе на адрес по младшему байту регистра команд. </p>
<p align="left"> Аналогично определяются начальные адреса алгоритмов для различных 
  способов адресации. Начальные адреса первого операнда определяются кодами 11111ХХХ1 
  путем маскирования маской 111110001, а начальные адреса второго операнда - кодами 
  011ХХХ111 (маска 011000111). </p>
<p align="left"> Однако полностью избежать дублирования начальных адресов не удается. 
  Так, например, при обработке команды 4 уровня SWAB возможно попадание, на адрес 
  111111111. На этот же адрес будет осуществляться переход и при способе адресации 
  7 через регистр 7.<br>
  В подобных случаях необходимо либо увеличить емкость ПЗУ, либо применять специальные 
  приемы. Например, можно поступить следующим образом: переход на адрес 111111111 
  в случае обработки команды в свободный регистр БИС К1804ВС1 занести 1, а в случае 
  обработки операндов в этот же регистр занести 0, а затем разделить эти варианты 
  с помощью команды условного перехода. </p>
<p> При использовании ПЗУ емкостью 1024 слова всю область памяти удобно разбить 
  на следующие области: </p>
<ul>
  <li> 0000-0377 область для переходов по старшему байту регистра команд;</li>
  <li> 0400-0777 область для переходов по младшему байту регистра команд;</li>
  <li> 1000-1377 область для переходов по способу адресации первого операнда;</li>
  <li> 1400-1777 область для переходов по способу адресации второго операнда.</li>
</ul>
<p> При таком разбиении начальные адреса дублироваться не будут.<br>
  После определения начальных адресов необходимо выделить участки ПЗУ для общих 
  частей всех команд: выборка команды, ее дешифрация, выборка операндов и т.д. 
  <br>
  При составлении микропрограммы необходимо следить за тем, чтобы микропрограмма 
  обработки какой-либо команды не наложилась на начальный адрес следующей команды. 
  Если не хватит ячеек ПЗУ для кодирования какой-либо команды, можно перейти по 
  микрокоманде безусловного перехода в свободную область памяти и там продолжить 
  микропрограмму обработки данной команды.</p>
<p>&nbsp;</p>
<p align="center"><a href="6.htm">Назад</a></p>
<p align="center"> <a href="index.htm">Содержание</a></p>
<p align="center"> <a href="8.htm">Вперед</a></p>
<p align="center">&nbsp;</p>
</body>
</html>
