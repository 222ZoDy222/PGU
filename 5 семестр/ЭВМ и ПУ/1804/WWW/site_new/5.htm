<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=x-mac-cyrillic">
</head>

<body background="White_2.jpg" link="#0000FF" vlink="#0000FF" alink="#FF00FF">
<h2 align="center">РАЗРАБОТКА АЛГОРИТМА ФУНКЦИОНИРОВАНИЯ ПРОЦЕССОРА</h2>
<p><br>
  В разработке алгоритма работы процессора, эмулирующего какую-либо систему команд, 
  должна предшествовать процедура установления соответствия между программно-доступной 
  аппаратурой базовой и эмулируемой ЭВМ. Например, при эмуляции системы команд 
  ЭВМ типа PDP-11 (&quot;Электроника-60&quot;) на микропроцессоре К1804 необходимо 
  установить однозначное соответствие между регистрами общего назначения (РОН) 
  и оговорить правила формирования и хранения признаков в слове состояния процессора. 
  ЭВМ &quot;Электроника-60&quot; имеет восемь программно-доступных РОНов, два 
  из которых имеют целевое назначение: R6 - указатель стека, R7 - счетчик команд. 
  Микропроцессор К1804 имеет 16 РОНов той же разрядности, что и &quot;Электроника-60&quot;. 
  &quot;Электроника-60&quot; имеет 16-разрядный регистр состояния процессора (РСП), 
  тогда как К1804 имеет 8-разрядный РСП. На основании этой информации разработчик 
  может, например, установить следующее соответствие:</p>
<p align="center"> <strong>PDP-11 </strong> <strong>K1804</strong><br>
  R0 &lt;-&gt; R0<br>
  R1 &lt;-&gt; R1<br>
  R2 &lt;-&gt; R2<br>
  R3 &lt;-&gt; R3<br>
  R4 &lt;-&gt; R4<br>
  R5 &lt;-&gt; R5<br>
  R6 &lt;-&gt; R6<br>
  R7 &lt;-&gt; R7<br>
  PSW &lt;-&gt; R15</p>
<p> Остальные регистры БИС К1804ВС1 (R8-R14) могут быть использованы в этом случае 
  для хранения промежуточных результатов.</p>
<p> Укрупненный алгоритм работы процессора показан на рис.4. Этап начальной инициализации 
  заключается в формировании конкретной конфигурации вычислительной системы, подключении 
  и переводе в активный режим всех устройств, обеспечивающих работу процессора 
  (ввод-вывод данных, связь с оператором и т.п.).<br>
  Пультовые операции позволяют выполнить установку начальных значений регистров 
  процессора, определить режимы работы ЭВМ, реализовать диалог оператора с ЭВМ.<br>
  Указанные два этапа являются стандартными и их разработка не входит в задачи 
  курсового проекта. <br>
  Выборка команды представляет собой последовательность действий по пересылке 
  адреса команды со счетчика команд на регистр адреса памяти, обращения к ЗУ, 
  приема кода команды из ЗУ в регистр команд и формирования адреса следующей команды.</p>
<p> Дешифрация команды представляет собой, фактически, две процедуры: первичная 
  и вторичная дешифрации. Первичная дешифрация предполагает определение принадлежности 
  команды к какой-либо группе в эмулируемой системе команд с дальнейшей выборкой 
  операндов. Вторичная дешифрация позволяет окончательно определить команду, находящуюся 
  в данный момент в регистре команд, с дальнейшим выполнением действий, предписанных 
  данной командой.<br>
  Дешифрация и выполнение команды обязательно учитывают специфику реализуемой 
  системы команд и особенности базовой ЭВМ. Рассмотрим эти этапы на примере реализации 
  системы команд ЭВМ типа &quot;Электроника - 60&quot;. 2.I4 </p>
<p> В соответствии с [4] всю систему команд эмулируемой ЭВМ можно разбить на следующие 
  подгруппы: команды пересылок, арифметические и логические операции, команды 
  вызова и возврата из подпрограмм, команды работы с флагами, прочие команды. 
  Команды кодируются по схеме, показанной на рис.5.<br>
  Имеется пять основных уровней кодов. Уровень 1 задается трехбитовым полем (биты 
  14,13 и 12); уровень 2 битом 11 кода команды; уровень 3 четырехбитовым полем 
  (биты 15,10,9 и 8); уровень 4 двухбитовым полем (биты 7 и 6); уровень 5 трехбитовым 
  полем (биты 2, 1 и 0). </p>
<p> Дешифрация выполняется последовательно, начиная с уровня 1. Признаком перехода 
  с одного уровня на другой является нулевая комбинация разрядов в соответствующем 
  поле. </p>
<p> Команды<strong> уровня 1</strong> двухадресные. В большинстве из них бит 15 
  указывает, на какую границу настроен адрес (слова или 8-битового байта в слове). 
  Исключением для уровня 1 является команда SOB, предназначенная для организации 
  циклов. Процедура выборки операндов команды SOB отличается от выборки операндов 
  всех остальных команд уровня 1, поэтому разработчику необходимо предусмотреть 
  на этапе первичной дешифрации выделение этой команды с целью ее выполнения по 
  отдельному алгоритму.</p>
<p> Команды <strong>уровня 2</strong>, в свою очередь, подразделяются на два подуровня. 
  Команды уровня 2.1 имеют формат &quot;полтора адреса&quot; например, команда 
  JSR), т.е. под адрес первого операнда в формате отводится всего три разряда 
  (для задания номера регистра), а для адреса второго операнда выделяется, как 
  обычно, шесть разрядов. Команды уровня 2.2 одноадресные команды арифметико-логической 
  группы.</p>
<p align="center"><img src="P4.gif" width="493" height="970"></p>
<p align="center">&nbsp;</p>
<p align="left"><strong>Уровень 3</strong> - это 15 команд условного перехода.<strong>Уровень 
  4</strong> команды работы с флагами и возврата из подпрограммы. <strong>Уровень 
  5</strong> команды общего назначения. </p>
<p align="center"><img src="P5.gif" width="600" height="536"></p>
<p align="center">&nbsp;</p>
<p align="left">Первичная дешифрация команд в кросс-системе К1804 (см. Приложение 
  2) выполняется в соответствии с рассмотренной системой кодирования.<br>
  По завершении первичной дешифрации кода команды выполняется дешифрация способов 
  адресации, выборка операндов и фиксация их в отведенных регистрах базовой ЭВМ. 
  Затем происходит выполнение команды и формирование всех необходимых признаков 
  результата по правилам эмулируемой ЭВМ.</p>
<p align="left"> На рис.6 показан пример выполнения команды DEC, которая относится 
  к одноадресным командам уровня 2.2. Считается, что код команды фиксируется в 
  регистре команд PK. Регистр R7 выполняет функции счетчика команд. Регистр RN 
  является регистром общего назначения, содержимое которого является операндом.<br>
  Дешифрация способа адресации реализуется в подпрограммах выборки операнда и 
  записи результата.</p>
<p align="left"> Заполнение любой команда завершается стандартной процедурой анализа 
  состояния системы, которая заключается в последовательном просмотре трех сигналов: 
  останова (аппаратного или программного), прерывания (аппаратного или программного) 
  и разрешения прерывания (слова состояния текущей программы). При этом завершение 
  программы фактически не анализируется, а выполняется по команде останова.</p>
<p align="left">&nbsp;</p>
<p align="center"><br>
  <a href="4.htm">Назад</a></p>
<p align="center"> <a href="index.htm">Содержание</a></p>
<p align="center"> <a href="6.htm">Вперед</a></p>
<p align="center">&nbsp;</p>
</body>
</html>
