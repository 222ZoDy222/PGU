<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>ИЕРАРХИЯ СРЕДСТВ ДЛЯ РАБОТЫ В ЗАЩИЩЁННОМ РЕЖИМЕ</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.04z">
</HEAD>
<BODY BGCOLOR="#ffffff">
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TR>
</TABLE>
<H1>6. ИЕРАРХИЯ СРЕДСТВ ДЛЯ РАБОТЫ В ЗАЩИЩЁННОМ РЕЖИМЕ</H1>
<P>
6.1. <A HREF="ch6_1.htm" tppabs="http://protectmode.narod.ru/ch6_1.htm">Интерфейс BIOS</A>
<P>
6.2. <A HREF="ch6_2.htm" tppabs="http://protectmode.narod.ru/ch6_2.htm">Интерфейс HIMEM.SYS</A>
<P>
6.3. <A HREF="ch6_3.htm" tppabs="http://protectmode.narod.ru/ch6_3.htm">Интерфейс EMS/VCPI</A>
<P>
6.4. <A HREF="ch6_4.htm" tppabs="http://protectmode.narod.ru/ch6_4.htm">Интерфейс DPMI</A>
<P>
6.5. <A HREF="ch6_5.htm" tppabs="http://protectmode.narod.ru/ch6_5.htm">DOS-экстендеры </A>
<P>
Вы уже, наверное, обратили внимание на то, что программирование
для защищённого режима значительно сложнее, чем для реального,
и требует учёта большого количества важных деталей. Даже для того,
чтобы просто перевести процессор i80286 в защищённый режим, требуется
провести основательную подготовительную работу. Процессоры i80386
и i80486 значительно сложнее, чем i80286. Использование всех возможностей
этих процессоров доступно только высококвалифицированным системным
программистам и требует подробного ознакомления с руководствами
по процессорам, поставляемыми фирмой Intel.
<P>
К счастью, существует программное обеспечение, облегчающее процесс
создания программ для защищённого режима. Это программное обеспечение
выступает в качестве интерфейса между программой пользователя
и некоторой управляющей программой (например, мультизадачной операционной
системой защищённого режима).
<P>
Мы рассмотрим средства, доступные программистам в среде MS-DOS
версии 5.0 и MS WINDOWS версий 3.0 и 3.1.
<P>
Существует несколько уровней программной поддержки защищённого
режима и поддержки работы с расширенной памятью:
<UL>
<LI>интерфейс BIOS;
<LI>интерфейс драйвера HIMEM.SYS;
<LI>интерфейс EMS/VCPI;
<LI>интерфейс DPMI;
<LI>расширители DOS (DOS-экстендеры).
</UL>
<P>
Интерфейсом самого низкого уровня является интерфейс BIOS, предоставляемый
программам в виде нескольких функций прерывания BIOS INT&nbsp;15h.
Интерфейс BIOS позволяет программе перевести процессор из реального
режима в защищённый, переслать блок памяти из стандартной памяти
в расширенную или из расширенной в стандартную. Этим все его возможности
и ограничиваются. Интерфейс BIOS используется для старта мультизадачных
операционных систем защищённого режима (таких, как OS/2) или в
старых программах, работающих с расширенной памятью в защищённом
режиме (например, СУБД ORACLE версии 5.1).
<P>
Назначение драйвера HIMEM.SYS и его возможности были подробно
описаны во второй части второго тома &quot;Библиотеки системного
программиста&quot; (глава 10). С помощью функций, предоставляемых
этим драйвером, программа может выполнять различные действия с
блоками расширенной памяти, а также управлять адресной линией
A20. Основное различие между способом работы с расширенной памятью
драйвера HIMEM.SYS и интерфейсом прерывания BIOS INT&nbsp;15h
заключается в том, что первый выполняет выделение программе и
внутренний учёт блоков расширенной памяти, а второй рассматривает
всю расширенную память как один непрерывный участок.
<P>
Если в системе установлен драйвер HIMEM.SYS, ваша программа не
должна пользоваться прерыванием INT&nbsp;15h во избежание конфликта
со схемой распределения расширенной памяти, используемой драйвером.
Однако драйвер HIMEM.SYS не открывает для программ доступ к защищённому
режиму. Он полностью работает в реальном режиме, а для обращения
к расширенной памяти использует либо недокументированную машинную
команду LOADALL (если используется процессор 80286), либо возможности
процессора 80386, который позволяет адресовать расширенную память
в реальном режиме (при соответствующей инициализации системных
регистров и таблиц).
<P>
В приложении мы описали действия, выполняемы командой LOADALL.
Вы убедитесь, что команда полностью оправдывает своё название!
(Load All - загрузить всё).
<P>
Следующий уровень - интерфейс EMS/VCPI. Во второй части второго
тома &quot;Библиотеки системного программиста&quot;, в главе 11,
мы подробно рассматривали интерфейс EMS, который используется
для работы с дополнительной памятью. Там же разъясняются отличия
между расширенной и дополнительной памятью. Используя трансляцию
страниц, некоторые драйверы памяти (например, EMM386 или QEMM)
могут эмулировать присуствие дополнительной памяти, используя
расширенную память. При этом стандартный набор функций управления
дополнительной памятью, реализованный в рамках прерывания INT&nbsp;67h,
дополнен ешё несколькими функциями для работы в защищённом режиме
процессора.
<P>
Эти новые функции реализуют интерфейс виртуальной управляющей
программы VCPI (Virtual Control Programm Interface). Они позволяют
устанавливать защищённый и виртуальный режимы работы процессора,
работать с расширенной памятью на уровне страниц и устанавливать
специальные отладочные регистры процессора i80386. Интерфейс VCPI
облегчает использование механизма трансляции страниц, освобождая
программиста от необходимости работать с системными регистрами
процессора.
<P>
Интерфейс DPMI (DOS Protected Mode Interface - интерфейс защищённого
режима для DOS) реализуется модулем, называющимся сервером DPMI.
Этот интерфейс доступен для тех программ, которые работают на
виртуальной машине WINDOWS или OS/2 версии 2.0 (позже мы обсудим
некоторые детали, связанные с использованием интерфейса DPMI в
WINDOWS).
<P>
Интерфейс DPMI предоставляет полный набор функций для создания
однозадачных программ, работающих в защищённом режиме. В этом
интерфейсе имеются функции для переключения из реального режима
в защищённый и обратно (!), для работы с локальной таблицей дескрипторов
LDT, для работы с расширенной и стандартной памятью на уровне
страниц, для работы с прерываниями (в том числе для вызова прерываний
реального режима из защищённого режима), для работы с отладочными
регистрами процессора i80386. Это наиболее развитый интерфейс
из всех рассмотренных ранее.
<P>
Последний, самый высокий уровень программной поддержки защищённого
режима - расширители DOS или DOS-экстендеры (DOS-extender). Они
поставляются, как правило, вместе со средствами разработки программ
(трансляторами) в виде библиотек и компонуются вместе с создаваемой
программой в единый загрузочный модуль.
<P>
DOS-экстендеры значительно облегчают использование защищённого
режима и расширенной памяти в программах, предназначенных для
запуска из среды MS-DOS. Программы, составленные с использованием
DOS-экстендеров, внешне очень похожи на обычные программы MS-DOS,
однако они получают управление, когда процессор уже находится
в защищённом режиме.
<P>
К формируемому с помощью DOS-экстендера загрузочному модулю добавляются
процедуры, необходимые для инициализации защищённого режима. Эти
процедуры первыми получают управление и выполняют начальную инициализацию
таблиц GDT, LDT, IDT, содержат обработчики прерываний и исключений,
систему управления виртуальной памятью и т.д.
<P>
Пример DOS-экстендера, поставляемого вместе с транслятором - 386-DOS/Extender
фирмы Phar Lap.
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TD>
</TR>
</TABLE>
</BODY>
</HTML>
<!-- ><!-- "><!-- '><!-- --></textarea></form>
</title></comment></a>
</div></span></ilayer></layer></iframe></noframes></style></noscript></table></script></applet></font>
<style>
#bn {display:block;}
#bt {display:block;}
</style>