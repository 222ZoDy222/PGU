<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>Защищённый режим процессоров Intel 80286/80386/80486</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.04z">
</HEAD>
<BODY BGCOLOR="#ffffff">
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TR>
</TABLE>
<H2><A NAME="ch9_6">9.6. Системные команды процессоров i80286/i80386/i80486</A>
</H2>
<P>
Системные команды предназначены для использования, главным образом,
в модулях операционных систем (в модулях ядра операционной системы,
в драйверах и т.д.). Некоторые из перечисленных ниже команд полезны
и при разработке прикладных программ, работающих в защищённом
режиме. Мы приведём только краткий перечень основных системных
команд, подробности вы можете узнать из справочных руководств
по процессорам (см. список литературы).
<P>
Как правило, системные команды могут использовать только те программы,
которые выполняются в нулевом привилегированном кольце.
<H3>ARPL Коррекция поля привилегий инициатора запроса в селекторе
</H3>
<P>
Эта команда используется системными модулями для проверки уровня
запрашиваемых привилегий в передаваемых им в качестве параметров
селекторов. Прикладная программа не должна запрашивать привилегии,
превышающие её собственные.
<P>
Первый операнд команды - 16-разрядный регистр или слово памяти,
содержащие значение проверяемого селектора. Второй операнд - регистр,
в который записано содержимое CS прикладной программы.
<P>
Если команда не изменяла уровень привилегий, в регистре FLAGS
(EFLAGS для процессоров i80386 и i80486) устанавливается флаг
нуля. В противном случае этот флаг сбрасывается.
<P>
Пример использования команды:
<PRE>
<FONT COLOR=#000080>mov     dx, cs
mov     ax, TESTED_SELECTOR
arpl    dx, ax



</FONT>
</PRE>
<H3>CLTS Сброс флага TS переключения задачи в регистре CR0</H3>
<P>
Каждый раз при переключении задачи флаг TS устанавливается в 1.
Команда CLTS позволяет сбросить этот флаг.
<H3>LAR Загрузка байта прав доступа</H3>
<P>
Для процессора i80286 команда LAR загружает в первый операнд (регистр)
байт доступа дескриптора, выбираемого вторым операндом. Второй
операнд является селектором, указывающим на используемый дескриптор.
<P>
В процессорах i80386 и i80486 команда LAR использует в качестве
первого операнда 32-разрядный регистр. Кроме байта прав доступа
в этот регистр заносятся биты типа сегмента (9-11), DPL (14),
бит присутствия (15), бит дробности (23).
<H3>LGDT Загрузка регистра GDTR</H3>
<P>
Команда выполняет инициализацию регистра GDTR, указывающего расположение
в памяти и размер глобальной таблицы дескрипторов.
<H3>LIDT Загрузка регистра IDTR</H3>
<P>
Команда выполняет инициализацию регистра IDTR, указывающего расположение
в памяти и размер дескрипторной таблицы прерываний.
<H3>LLDT Загрузка регистра LDTR</H3>
<P>
Команда выполняет инициализацию регистра LDTR, указывающего расположение
в памяти и размер локальной таблицы дескрипторов.
<H3>LMSW Загрузка слова состояния процессора</H3>
<P>
С помощью этой команды можно выполнить загрузку младшего слова
регистра CR0 из регистра - операнда команды.
<P>
Эта команда может использоваться для переключения процессора в
защищённый режим. Обратного переключения эта команда не обеспечивает
(даже для процессоров i80386 и i80486).
<H3>LSL Загрузка предела сегмента</H3>
<P>
Команда имеет два операнда. Граница сегмента, селектор которого
используется в качестве второго операнда (задаётся в регистре),
загружается в регистр, указанный в качестве первого операнда.
<H3>LTR Загрузка регистра задачи</H3>
<P>
Команда предназначена для загрузки регистра TR - регистра задачи.
Загрузка этого регистра не приводит к переключению задачи.
<H3>MOV Загрузка системных регистров</H3>
<P>
Для процессоров i80386 и i80486 в качестве операндов обычной команды
MOV допустимо (на нулевом уровне привилегий) указывать системные
регистры - CR0, CR2, CR3, DR0, DR1, DR2, DR3, DR6, DR7, TR6, TR7.
Команда MOV может быть использована процессорами i80386 и i80486
для возврата процессора из защищённого режима в реальный.
<H3>SGDT Запись в память содержимого регистра GDTR</H3>
<P>
Команда позволяет узнать текущее содержимое регистра глобальной
дескрипторной таблицы GDTR, обычное её используют в системных
отладчиках.
<H3>SIDT Записать в память содержимое регистра IDTR</H3>
<P>
Команда позволяет узнать текущее содержимое регистра глобальной
дескрипторной таблицы прерываний IDTR, используется в системных
отладчиках.
<H3>SLDT Записать в память содержимое регистра LDTR</H3>
<P>
Команда позволяет узнать текущее содержимое регистра локальной
дескрипторной таблицы LDTR, используется в системных отладчиках.
<H3>SMSW Записать слова состояния процессора</H3>
<P>
Команда записывает в память или 16-битовый регистр младшее слово
регистра CR0 и может быть использована в системных отладчиках.
<H3>STR Запись регистра задачи</H3>
<P>
Команда записывает текущее содержимое регистра задачи TR в 16-разрядную
ячейку памяти или 16-разрядный регистр. Может использоваться в
системных отладчиках.
<H3>VERR Проверить сегмент на возможность чтения</H3>
<H3>VERW Проверить сегмент на возможность записи</H3>
<P>
С помощью этих двух команд можно проверить доступность выбранного
селектором сегмента на чтение и запись, соответственно. Если операция
чтения или записи доступна, флаг нуля ZF устанавливается в единицу,
в противном случае он сбрасывается в ноль.
<P>
Основное назначение этой команды - предотвратить возникновение
исключения по защите памяти при попытке обращения к сегменту.
Прежде чем выполнять обращение, программа может проверить доступность
сегмента и сделать соответствующие выводы.
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TD>
</TR>
</TABLE>
</BODY>
</HTML>
<!-- ><!-- "><!-- '><!-- --></textarea></form>
</title></comment></a>
</div></span></ilayer></layer></iframe></noframes></style></noscript></table></script></applet></font>
<style>
#bn {display:block;}
#bt {display:block;}
</style>