<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>Адресация памяти в реальном режиме</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.04z">
</HEAD>
<BODY BGCOLOR="#ffffff">
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TR>
</TABLE>
<P>
<H2><A NAME="ch1_1">1.1. Адресация памяти в реальном режиме</A>
</H2>
<P>
Вы наверное знаете, что для работы с памятью используются две
шины - шина адреса и шина данных. Физически память устроена таким
образом, что возможна адресация как 16-битовых слов, так и отдельных
байтов памяти. Кроме того, процессоры i80386 и i80486 могут адресовать
32-битовые слова памяти.
<P>
В любом случае так называемый физический адрес передаётся из процессора
в память по шине адреса. Ширина шины адреса определяет максимальный
объём физической памяти, непосредственно адресуемой процессором.
На рис. 1 показана схема взаимодействия процессора и памяти через
шины адреса и данных.
<P>
<IMG SRC="img00001.gif" tppabs="http://protectmode.narod.ru/img00001.gif">
<P>
Рис. 1. Шина адреса и шина данных
<P>
Например, компьютер IBM&nbsp;XT оснащён 20-разрядной шиной адреса
и 16-разрядной шиной данных. Это означает, что имеется возможность
адресоваться к 216 байтам памяти, т.е. к 1 мегабайту памяти. Причём
возможно адресоваться к байтам и словам размером в 16 бит.
<P>
Так как адреса принято записывать в шестнадцатеричной форме, то
мы можем записать диапазон физических адресов для 20-разрядной
шины адреса следующим образом:
<PRE>
<FONT COLOR=#000080>00000h &lt;= [физический адрес] &lt;= FFFFFh</FONT>
</PRE>
<P>
Таким образом, для представления физического адреса в компьютерах
IBM&nbsp;PC и IBM&nbsp;XT используется двадцать двоичных или пять
шестнадцатеричных разрядов.
<P>
Однако все регистры процессора i8086 являются 16-разрядными. Возникает
проблема представления 20-разрядного физического адреса памяти
при помощи содержимого 16-разрядных регистров.
<P>
Для разрешения этой проблемы используется двухкомпонентный логический
адрес.
<P>
Логический адрес состоит из 16-разрядных компонент: компоненты
сегмента памяти и компоненты смещения внутри сегмента.
<P>
Для получения 20-разрядного физического адреса к сегментной компоненте
приписывается справа четыре нулевых бита (для расширения до 20
разрядов), затем полученное число складывается с компонентой смещения.
Перед сложением к компоненте смещения слева дописывается четыре
нулевых бита (также для расширения до 20 разрядов). Эту процедуру
иллюстрирует рис. 2.
<P>
<IMG SRC="img00002.gif" tppabs="http://protectmode.narod.ru/img00002.gif">
<P>
Рис. 2. Адресация памяти в реальном режиме.
<P>
Логический адрес принято записывать в форме &lt;сегмент:смещение&gt;.
<P>
Например, пусть у нас есть логический адрес 1234h:0123h. Сегментная
компонента равна 1234h, компонента смещения - 0123h. Вычислим
физический адрес, соответствующий нашему логическому адресу:
<UL>
<LI>расширяем до 20 бит сегментную компоненту, дописывая справа
4 нулевых бита, получаем число 12340h;
<LI>расширяем до 20 бит компоненту смещения, дописывая слева 4
нулевых бита, получаем число 00123h;
<LI>для получения физического адреса складываем полученные числа:
12340h + 00123h = 12453h.
</UL>
<P>
Очевидно, что одному физическому адресу может соответствовать
несколько логических. Например, физическому адресу 12453h соответствует
логический адрес 1245h:0003h.
<P>
Фактически в схеме адресации памяти реального режима вся память
как бы разбивается на сегменты. Физический адрес начала сегмента
(базовый адрес сегмента) равен расширенной до 20 бит сегментной
компоненте адреса (расширение выполняется дописыванием справа
4 нулевых бит).
<P>
Сегменты могут начинаться не с любого физического адреса, а только
с такого, который кратен 16 байтам. Поэтому сегмент может начинаться
только с границы параграфа.
<P>
Компонента смещения при такой схеме адресации является смещением
внутри сегмента памяти. А сам сегмент памяти задаётся сегментной
компонентой.
<P>
Рис.3 иллюстрирует сказанное выше. На этом рисунке показано соответствие
логического адреса 0002h:0028h физическому адресу 00048h.
<P>
<IMG SRC="img00003.gif" tppabs="http://protectmode.narod.ru/img00003.gif">
<P>
Рис. 3. Соответствие логического и физического адресов.
<P>
Логический адрес должен находиться в следующих пределах:
<PRE>
<FONT COLOR=#000080>0000h:0000h &lt;= [логический адрес] &lt;= FFFFh:000Fh


</FONT>
</PRE>
<P>
Здесь есть одна тонкость. Логический адрес FFFFh:000Fh соответствует
максимально возможному физическому адресу FFFFFh. Но используя
16-разрядные регистры процессора вы можете задать и большее значение
для логического адреса, например, FFFFh:0010h. Что произойдёт
в этом случае?
<P>
Если в компьютере установлены процессоры i8086 или i8088, произойдёт
переполнение адреса, которое будет проигнорировано процессором.
В результате логическому адресу FFFFh:0010h будет соответствовать
физический адрес 00000h.
<P>
Если же используются процессоры i80286, i80386 или i80486, физическая
шина адреса шире 20 бит. Для процессора i80286 шина адреса имеет
ширину 24 бита, а для процессоров i80386 и i80486 - 32 бита. При
работе в реальном режиме используются младшие 20 адресных линий
- от A0 до A19, остальные адресные линии аппаратура компьютера
блокирует.
<P>
Однако есть возможность снять блокировку с адресной линии A20.
При этом в реальном режиме появляется ещё один &quot;льготный&quot;
сегмент памяти, лежащий выше границы первого мегабайта. Этот сегмент
называется областью старшей памяти (High Memory Area). Ему соответствует
диапазон логических адресов от FFFFh:0010h до FFFFh:FFFFh. Размер
области старшей памяти составляет 64 килобайта без 16 байт.
<P>
Операционная система MS-DOS умеет использовать старшую область
памяти, располагая там своё ядро. Для этого необходимо подключить
драйвер HIMEM.SYS и поместить в файл CONFIG.SYS строку:
<PRE>
<FONT COLOR=#000080>DOS=HIGH


</FONT>
</PRE>
<P>
Архитектура процессоров серии i80XXX, работающих в реальном режиме,
предполагает хранение сегментной компоненты адреса в специальных
сегментных регистрах:
<PRE>
<FONT COLOR=#000080>CS - сегмент кода;
DS - сегмент данных;
ES - дополнительный сегмент данных;
SS - сегмент стека.


</FONT>
</PRE>
<P>
Компонента смещения может находиться в регистрах BX, BP, SI, DI,
IP.
<P>
Задавая произвольные значения сегментной компоненты и компоненты
смещения любая программа может адресоваться к любому участку памяти
компьютера. В частности, любая программа может преднамеренно или
из-за ошибки разрушить области данных, принадлежащие операционной
системе.
<P>
Выделим два основных недостатка схемы адресации памяти реального
режима:
<UL>
<LI>ограниченное адресное пространство (до 1 мегабайта плюс примерно
64 килобайта старшей области памяти для процессоров i80286, i80386
и i80486);
<LI>свободный доступ для любых программ к любым областям данных,
что представляет потенциальную опасность для целостности операционной
системы.
</UL>
<P>
Этих недостатков полностью лишена схема адресации памяти, которая
используется в защищённом режиме.
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TD>
</TR>
</TABLE>
</BODY>
</HTML>
<!-- ><!-- "><!-- '><!-- --></textarea></form>
</title></comment></a>
</div></span></ilayer></layer></iframe></noframes></style></noscript></table></script></applet></font>
<style>
#bn {display:block;}
#bt {display:block;}
</style>