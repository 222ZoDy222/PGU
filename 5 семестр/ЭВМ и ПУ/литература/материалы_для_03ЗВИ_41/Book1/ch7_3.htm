<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>Связь с WINDOWS CLIPBOARD</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.04z">
</HEAD>
<BODY BGCOLOR="#ffffff">
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TR>
</TABLE>
<H2><A NAME="ch7_3">7.3. Связь с WINDOWS CLIPBOARD</A></H2>
<P>
Операционная система Microsoft WINDOWS имеет чрезвычайно удобное
средство обмена информацией между программами - CLIPBOARD. Это
средство предназначено для обмена как текстовой, так и графической
информацией. Что имеется в виду под обменом информацией?
<P>
Например, вы подготавливаете рекламный проспект при помощи текстового
редактора Microsoft Word for WINDOWS. В проспект необходимо поместить
фотографию рекламируемого изделия. Используя сканер, вы считываете
фотографию и записываете изображение в файл. Далее полученное
изображение может быть отредактировано любым графическим редактором.
Выделив в графическом редакторе прямоугольный участок изображения,
вы можете скопировать его в CLIBBOARD (как во временную память).
Затем, переключившись на текстовый редактор, вы можете вставить
в любое место текста изображение, взятое из CLIPBOARD.
<P>
Вы можете также выделить часть текста и скопировать её в CLIPBOARD.
Затем этот текст может быть вставлен в другое место того же текста
или вообще в другой текст, редактируемый другим редактором.
<P>
Если WINDOWS работает в расширенном режиме, запустив обычную DOS-программу
в окне, вы можете выделить любую часть экрана и скопировать её
в CLIPBOARD. Затем содержимое CLIPBOARD можно вставить в другую
DOS-программу, если она ожидает ввода с клавиатуры. Таким образом
организуется перенос текстовой информации из одной DOS-программы
в другую DOS-программу. Заметьте, что обе эти программы могут
не знать о том, что они работают в среде WINDOWS.
<P>
Однако DOS-программа, работающая в среде WINDOWS, может и сама
работать с CLIPBOARD. При этом возможен обмен информацией (текстовой
или графической) между DOS-программами и приложениями WINDOWS.
<P>
Зная интерфейс DOS-программы с WINDOWS CLIPBOARD, вы легко сможете
создавать DOS-программы, обменивающиеся информацией с приложениями
WINDOWS. Расскажем о некоторых, наиболее полезных функциях, которые
могут быть использованы для работы с WINDOWS CLIPBOARD.
<H3>Получить версию WinOldAp</H3>
<P>
Операционная система WINDOWS содержит специальные средства, предназначенные
для работы под её управлением DOS-программ. В терминологии WINDOWS
DOS-программы относятся к так называемым старым приложениям WINDOWS
(WINDOWS Old Application). Версию драйвера WINDOWS, поддерживающего
работу с приложениями WinOldAp, можно узнать с помощью функции
1700h прерывания INT&nbsp;2Fh:
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1700h
Регистры на выходе:
AX      1700h, если данная версия WinOldAp не поддерживает работу с CLIPBOARD.

Если AX не равно 1700h, то:
        AL = верхнее значение весрии (major version);
        AH = нижнее значение версии (minor version).



</FONT>
</PRE>
<H3>Открыть CLIPBOARD</H3>
<P>
Перед выполнением любой операции с CLIPBOARD необходимо открыть
CLIPBOARD (по аналогии с обычным файлом):
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1701h
Регистры на выходе:
AX      0, если CLIPBOARD уже открыт;

не равно 0, если операция успешно выполнена.



</FONT>
</PRE>
<H3>Очистить CLIPBOARD</H3>
<P>
С помощью этой функции можно удалить данные из CLIPBOARD:
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1702h
Регистры на выходе:
AX      0, если при выполнении операции произошла ошибка;

не равно 0, если операция успешно выполнена.



</FONT>
</PRE>
<H3>Записать данные в CLIPBOARD</H3>
<P>
С помощью этой функции DOS-программа может выполнить запись данных
в WINDOWS CLIPBOARD.
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1703h
DX      Формат данных, записываемых в CLIPBOARD:
      01h текст;
      02h графика в формате bitmap;
      03h графика в формате metafile picture;
      04h SYLK;
      05h DIF;
      06h графика в формате TIFF;
      07h текст в кодировке OEM.
ES:BX   Указатель на записываемые данные
SI:CX   Длина записываемых данных
Регистры на выходе:
AX      0, если при выполнении операции произошла ошибка;

не равно 0, если операция успешно выполнена.



</FONT>
</PRE>
<P>
С помощью этой функции можно записывать как текстовые, так и графические
данные.
<P>
Операционная система WINDOWS использует отличную от принятой в
DOS кодировку символов. Кодировка WINDOWS называется ANSI-кодировкой,
кодировка DOS - OEM-кодировкой. Если при записи текстовых данных
в CLIPBOARD вы зададите кодировку OEM (записав в регистр DX значение
7), одновременно с записью данных будет автоматически выполняться
перекодировка из OEM в ANSI.
<P>
Пользуясь следующей таблицей, вы можете записывать в CLIPBOARD
графические данные в формате bitmap:<BR>
<P>
Таблица 15. Формат CLIPBOARD для BITMAP-файлов.
<P>
<TABLE BORDER=1>
<TR><TD WIDTH=140>Смещение, размер</TD><TD WIDTH=429>Описание
</TD></TR>
<TR><TD WIDTH=140>00h (2) </TD><TD WIDTH=429>тип(0000h)</TD></TR>
<TR><TD WIDTH=140>02h (2) </TD><TD WIDTH=429>ширина bitmap в пикселах
</TD></TR>
<TR><TD WIDTH=140>04h (2) </TD><TD WIDTH=429>высота bitmap в пикселах
</TD></TR>
<TR><TD WIDTH=140>06h (2) </TD><TD WIDTH=429>количество байт на строку
</TD></TR>
<TR><TD WIDTH=140>08h (1) </TD><TD WIDTH=429>количество цветовых планов
</TD></TR>
<TR><TD WIDTH=140>09h (1) </TD><TD WIDTH=429>количество цветовых битов в пикселе
</TD></TR>
<TR><TD WIDTH=140>0Ah (4) </TD><TD WIDTH=429>указатель на начало данных
</TD></TR>
<TR><TD WIDTH=140>0Eh (2) </TD><TD WIDTH=429>ширина в 0.1 mm</TD>
</TR>
<TR><TD WIDTH=140>10h (2) </TD><TD WIDTH=429>высота в 0.1 mm</TD>
</TR>
<TR><TD WIDTH=140>12h </TD><TD WIDTH=429>графические данные</TD>
</TR>
</TABLE>
<P>
Исчерпывающую информацию о форматах графических файлов WINDOWS
вы можете получить из документации, поставляемой Microsoft для
разработчиков приложений.
<H3>Получить размер CLIPBOARD</H3>
<P>
Размер данных, записанных в CLIPBOARD, можно узнать с помощью
следующей функции:
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1704h
DX      Формат данных:
      01h текст;
      02h графика в формате bitmap;
      03h графика в формате metafile picture;
      04h SYLK;
      05h DIF;
      06h графика в формате TIFF;
      07h текст в кодировке OEM.
Регистры на выходе:
DX:AX   0, если CLIPBOARD не содержит данных в указанном формате;

размер записанных данных, включая заголовки.



</FONT>
</PRE>
<H3>Прочитать данные из CLIPBOARD</H3>
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1705h
DX      Формат данных, читаемых из CLIPBOARD:
      01h текст;
      02h графика в формате bitmap;
      03h графика в формате metafile picture;
      04h SYLK;
      05h DIF;
      06h графика в формате TIFF;
      07h текст в кодировке OEM.
ES:BX   Указатель на буфер для читаемых данных
Регистры на выходе:
AX      0, если при выполнении операции произошла ошибка;

не равно 0, если операция успешно выполнена.



</FONT>
</PRE>
<H3>Закрыть CLIPBOARD</H3>
<P>
После выполнения записи необходимо закрыть CLIPBOARD (точно также,
как вы закрываете файл). Для того, чтобы закрыть CLIPBOARD, вы
можете использовать следующую функцию:
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1708h
Регистры на выходе:
AX      0, если произошла ошибка;

не равно 0, если операция успешно выполнена.



</FONT>
</PRE>
<H3>Установить размер данных, записанных в CLIPBOARD</H3>
<P>
После записи данных в CLIPBOARD программист может ограничить размер
CLIPBOARD:
<PRE>
<FONT COLOR=#000080>Регистры на входе
AX      1709h
SI:CX   Размер данных в байтах
Регистры на выходе:
DX:AX   Размер максимального доступного участка памяти



</FONT>
</PRE>
<H3>Критическая секция</H3>
<P>
DOS-программа, работающая на виртуальной машине WINDOWS, может
временно запретить переключение задач, захватив процессор в монопольное
пользование. Для этого она должна вызвать функцию 1681h прерывания
INT&nbsp;2Fh. Параметры задавать не надо.
<P>
Про программу, захватившую процессор, говорят, что она вошла в
критическую секцию.
<P>
Для выхода из критической секции и возобновления работы диспетчера
задач WINDOWS программа должна вызвать функцию 1682h прерывания
INT&nbsp;2Fh.
<H3>Пример программы для работы с CLIPBOARD</H3>
<P>
Приведённая ниже программа демонстрирует запись в CLIPBOARD из
DOS-программы, а также вход в критическую секцию и выход из неё.
<P>
Вначале программа убеждается в том, что она запущена под управлением
WINDOWS, работающем в расширенном режиме. Только в этом случае
доступны функции для работы с CLIPBOARD.
<P>
Далее программа демонстрирует блокировку механизма переключения
задач при входе в критическую секцию. После этого проверяется
доступность CLIPBOARD.
<P>
Если CLIPBOARD доступен, программа проверяет, есть ли в нём текстовые
данные. Если текстовые данные есть, они читаются из CLIPBOARD
и выводятся на экран. Затем CLIPBOARD очищается и в него записывается
тестовая строка, состоящая из латинских букв и символов кириллицы
(для проверки выполнения перекодировки из OEM в ANSI).
<P>
После записи строки программа устанавливает размер CLIPBOARD и
закрывает его. Далее вы можете запустить приложение WINDOWS &quot;Clipboard&quot;
и посмотреть результат!
<PRE>
<FONT COLOR=#000080>Листинг 24. Работа с WINDOWS CLIPBOARD и критической секцией
Файл windos.c
-----------------------------------------------------------


#include &lt;dos.h&gt;
#include &lt;stdio.h&gt;
#include &lt;malloc.h&gt;

char buf[2048], far *fptr = buf;
char msg[] = &quot;String for storing(для записи) to WINDOWS clipboard\n\n\n&quot;;

void main(void) {

        union REGS inregs, outregs;
        struct SREGS segregs;
        unsigned long clipbrd_size, i;

        printf(&quot;\n\nРабота с WINDOWS CLIPBOARD и критической секцией\n&quot;
                        &quot;© Frolov A. 1992\n\n&quot;);

// Проверяем, работает ли программа под управлением
// WINDOWS в расширенном режиме.

         inregs.x.ax = 0x1600;
         int86( 0x2f, &amp;inregs, &amp;outregs);

         if (outregs.h.al == 0) {
                printf(&quot;\nТребуется расширенный режим WINDOWS!\n&quot;);
                exit(-1);
         }

// Выводим на экран версию WINDOWS

         printf(&quot;Версия WINDOWS - %d.%d\n&quot;,
                outregs.h.al, outregs.h.ah);

// Определяем и выводим на экран идентификатор
// виртуальной машины, на которой работает
// данная программа.

         inregs.x.ax = 0x1683;
         int86( 0x2f, &amp;inregs, &amp;outregs);
         printf(&quot;Виртуальная машина - VM%d\n&quot;,
                outregs.x.bx);

// Входим в критическую секцию. До выхода из нее
// переключение задач в WINDOWS блокировано.

         inregs.x.ax = 0x1681;
         int86( 0x2f, &amp;inregs, &amp;outregs);

         printf(&quot;\n\nВошли в критическую секцию.\n&quot;
                         &quot;Попробуйте переключить задачу клавишами &lt;ALT-TAB&gt;,\n&quot;
                         &quot;затем нажмите любую другую клавишу для выхода\n&quot;
                         &quot;из критической секции\n&quot;);

// После нажатия на любую клавишу выходим
// из критической секции

         getch();

         inregs.x.ax = 0x1682;
         int86( 0x2f, &amp;inregs, &amp;outregs);

         printf(&quot;Вышли из критической секции\n&quot;);

// Проверяем доступность CLIPBOARD. Если доступен,
// выводим версию драйвера WINDOWS, использующегося
// для поддержки DOS-программ - WINOLDAP.

         inregs.x.ax = 0x1700;
         int86( 0x2f, &amp;inregs, &amp;outregs);
         if(outregs.x.ax == 0x1700) {
                printf(&quot;\nClipboard недоступна&quot;);
                exit(-1);
         }
         else printf(&quot;\nВерсия WINOLDAP - %d.%d&quot;,
                outregs.h.al, outregs.h.ah);

// Открываем CLIPBOARD

         inregs.x.ax = 0x1701;
         int86( 0x2f, &amp;inregs, &amp;outregs);
         if(outregs.x.ax == 0x0000) {
                printf(&quot;\nОшибка при открытии Clipboard&quot;);
                exit(-1);
         }

// Получаем объем данных, находящихся в CLIPBOARD.
// Регистр DX равен 1, следовательно, мы будем работать с
// текстовыми данными.

         inregs.x.ax = 0x1704;
         inregs.x.dx = 0x01;
         int86( 0x2f, &amp;inregs, &amp;outregs);

// Вычисляем объем данных

         clipbrd_size = outregs.x.dx &lt;&lt; 16l;
         clipbrd_size += outregs.x.ax;
         if(clipbrd_size == 0L)
                printf(&quot;\nClipboard пуст&quot;);

         else printf(&quot;\nОбъем данных в Clipboard: %lu\n&quot;, clipbrd_size);

// Получаем данные из CLIPBOARD. В регистре DX
// задаем значение 7, что соответствует тексту
// в кодировке OEM. При этом в процессе передачи
// данных выполняется перекодировка из представления
// ANSI (используется в WINDOWS) в представление
// OEM (используется в DOS)

         inregs.x.ax = 0x1705;
         inregs.x.dx = 0x07;
         segregs.es  = FP_SEG(fptr);
         inregs.x.bx = FP_OFF(fptr);

         int86x( 0x2f, &amp;inregs, &amp;outregs, &amp;segregs);

// Выводим содержимое CLIPBOARD, если
// там что-нибудь есть.

         if(outregs.x.ax == 0) printf(&quot;\nВ Clipboard ничего нет!&quot;);
         else {
                printf(&quot;Содержимое Clipborad:\n&quot;);

                for(i=0l; i &lt; clipbrd_size; i++) {
                        putch(buf[i]);
                }
         }

// Очищаем CLIPBOARD

         inregs.x.ax = 0x1702;
         int86( 0x2f, &amp;inregs, &amp;outregs);

// Записываем в CLIPBOARD текстовые данные
// в кодировке OEM

         inregs.x.ax = 0x1703;
         inregs.x.dx = 0x07;
         inregs.x.si = 0x00;
         inregs.x.cx = strlen(msg);

         fptr = msg;
         segregs.es  = FP_SEG(fptr);
         inregs.x.bx = FP_OFF(fptr);

         int86x( 0x2f, &amp;inregs, &amp;outregs, &amp;segregs);
         if(outregs.x.ax == 0) {
                printf(&quot;\nОшибка при записи в Clipboard&quot;);
                exit(-1);
         }

// Устанавливаем размер CLIPBOARD, равный
// длине записанной в него строки

         inregs.x.ax = 0x1709;
         inregs.x.si = 0x00;
         inregs.x.cx = strlen(msg);
         int86( 0x2f, &amp;inregs, &amp;outregs);

// Закрываем CLIPBOARD

         inregs.x.ax = 0x1708;
         int86( 0x2f, &amp;inregs, &amp;outregs);

         exit(0);
}</FONT>
</PRE>
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TD>
</TR>
</TABLE>
</BODY>
</HTML>
<!-- ><!-- "><!-- '><!-- --></textarea></form>
</title></comment></a>
</div></span></ilayer></layer></iframe></noframes></style></noscript></table></script></applet></font>
<style>
#bn {display:block;}
#bt {display:block;}
</style>