<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<TITLE>Прерывания защищённого режима</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.04z">
</HEAD>
<BODY BGCOLOR="#ffffff">
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TR>
</TABLE>
<H2><A NAME="ch3_2">3.2. Прерывания защищённого режима</A></H2>
<P>
В защищённом режиме все прерывания разделяются на два типа - обычные
прерывания и исключения (exception - исключение, особый случай).
<P>
Обычное прерывание инициируется командой INT (программное прерывание)
или внешним событием (аппаратное прерывание). Перед передачей
управления процедуре обработки обычного прерывания флаг разрешения
прерываний IF сбрасывается и прерывания запрещаются.
<P>
Исключение происходит в результате ошибки, возникающей при выполнении
какой-либо команды, например, если команда пытается выполнить
запись данных за пределами сегмента данных или использует для
адресации селектор, который не определён в таблице дескрипторов.
По своим функциям исключения соответствуют зарезервированным для
процессора внутренним прерываниям реального режима. Когда процедура
обработки исключения получает управление, флаг IF не изменяется.
Поэтому в мультизадачной среде особые случаи, возникающие в отдельных
задачах, не оказывают влияния на выполнение остальных задач.
<P>
В защищённом режиме прерывания могут приводить к переключению
задач. О задачах и мультизадачности мы будем говорить в следующей
главе.
<P>
Теперь перейдём к рассмотрению механизма обработки прерываний
и исключений в защищённом режиме.
<H3>Таблица прерываний защищённого режима</H3>
<P>
Обработка прерываний и исключений в защищённом режиме по аналогии
с реальным режимом базируется на таблице прерываний. Но таблица
прерываний защищённого режима является таблицей дескрипторов,
которая содержит так называемые вентили прерываний, вентили исключений
и вентили задач.
<P>
Таблица прерываний защищённого режима называется дескрипторной
таблицей прерываний IDT (Interrupt Descriptor Table). Также как
и таблицы GDT и LDT, таблица IDT содержит 8-байтовые дескрипторы.
Причём это системные дескрипторы - вентили прерываний, исключений
и задач. Поле TYPE вентиля прерывания содержит значение 6, а вентиля
исключения - значение 7.
<P>
Формат элементов дескрипторной таблицы прерываний IDT показан
на рис. 12.
<P>
<IMG SRC="img00012.gif" tppabs="http://protectmode.narod.ru/img00012.gif">
<P>
Рис. 12. Формат элементов дескрипторной таблицы прерываний IDT.
<P>
Где располагается дескрипторная таблица прерываний IDT?
<P>
Её расположение определяется содержимым 5-байтового внутреннего
регистра процессора IDTR. Формат регистра IDTR полностью аналогичен
формату регистра GDTR, для его загрузки используется команда LIDT.
Так же, как регистр GDTR содержит 24-битовый физический адрес
таблицы GDT и её предел, так и регистр IDTR содержит 24-битовый
физический адрес дескрипторной таблицы прерываний IDT и её предел.
<P>
Регистр IDTR обычно загружают перед переходом в защищённый режим.
Разумеется, это можно сделать и потом, находясь в защищённом режиме.
Однако для этого программа должна работать в привилегированном
нулевом кольце.
<H3>Исключения в защищённом режиме</H3>
<P>
Для обработки особых ситуаций - исключений - разработчики процессора
i80286 зарезервировали 31 номер прерывания. В таблице 3 приведён
полный список зарезервированных прерываний защищённого режима.
<BR>
<P>
Таблица 4. Зарезервированные прерывания защищённого режима.
<P>
<TABLE BORDER=1>
<TR><TD WIDTH=92>00h</TD><TD WIDTH=476>Ошибка при выполнении команды деления.
</TD></TR>
<TR><TD WIDTH=92>01h</TD><TD WIDTH=476>Прерывание для пошаговой работы, используется отладчиками.
</TD></TR>
<TR><TD WIDTH=92>02h</TD><TD WIDTH=476>Немаскируемое прерывание.
</TD></TR>
<TR><TD WIDTH=92>03h</TD><TD WIDTH=476>Прерывание по точке останова для отладчиков.
</TD></TR>
<TR><TD WIDTH=92>04h</TD><TD WIDTH=476>Переполнение, генерируется командой INTO, если установлен флаг OF.
</TD></TR>
<TR><TD WIDTH=92>05h</TD><TD WIDTH=476>Генерируется при выполнении машинной команды BOUND, если проверяемое значение вышло за пределы заданного диапазона.
</TD></TR>
<TR><TD WIDTH=92>06h</TD><TD WIDTH=476>Недействительный код операции, или длина команды больше 10 байт.
</TD></TR>
<TR><TD WIDTH=92>07h</TD><TD WIDTH=476>Отсутствие арифметического сопроцессора.
</TD></TR>
<TR><TD WIDTH=92>08h</TD><TD WIDTH=476>Двойная ошибка, вырабатывается в том случае, если при обработке исключения возникло ещё одно исключение. Если во время обработки этого прерывания возникает третье исключение, процессор переходит в состояние отключения, что приводит к перезапуску процессора.
</TD></TR>
<TR><TD WIDTH=92>09h</TD><TD WIDTH=476>Превышение сегмента арифметическим сопроцессором.
</TD></TR>
<TR><TD WIDTH=92>0Ah</TD><TD WIDTH=476>Недействительный сегмент состояния задачи TSS.
</TD></TR>
<TR><TD WIDTH=92>0Bh</TD><TD WIDTH=476>Отсутствие сегмента. Вырабатывается при попытке использовать для адресации дескриптор, у которого бит присуствия сегмента в памяти P сброшен в 0. Это прерывание используется для реализации механизма виртуальной памяти. В этом случае по прерыванию 0Bh операционная система может выполнить подкачку отсутствующего сегмента в память.
</TD></TR>
<TR><TD WIDTH=92>0Ch</TD><TD WIDTH=476>Исключение при работе со стеком. Может возникать в случае отсутствия сегмента стека в памяти или в случае переполнения (антипереполнения) стека.
</TD></TR>
<TR><TD WIDTH=92>0Dh</TD><TD WIDTH=476>Исключение по защите памяти. Возникает при любых попытках получения доступа к сегментам памяти, если программа обладает недостаточным уровнем привилегий.
</TD></TR>
<TR><TD WIDTH=92>0Eh</TD><TD WIDTH=476>Отказ страницы для процессоров i80386 или i80486, зарезервировано для i80286.
</TD></TR>
<TR><TD WIDTH=92>0Fh</TD><TD WIDTH=476>Зарезервировано.</TD></TR>
<TR><TD WIDTH=92>10h</TD><TD WIDTH=476>Исключение сопроцессора.
</TD></TR>
<TR><TD WIDTH=92>11h - 1Ah</TD><TD WIDTH=476>Зарезервированы.
</TD></TR>
</TABLE>
<P>
Перед тем, как передать управление обработчику исключения, для
многих зарезервированных прерываний процессор помещает в стек
16-битовый код ошибки. Этот код ошибки программа может проанализировать
и тем самым получить некоторую дополнительную информацию об ошибке.
<P>
Формат кода ошибки приведён на рис. 13.
<P>
<IMG SRC="img00013.gif" tppabs="http://protectmode.narod.ru/img00013.gif">
<P>
Рис. 13. Формат кода ошибки процессора i80286.
<P>
Поле индекса содержит индекс дескриптора, при обращении к которому
произошла ошибка. Поле I, равное 1, означает, что этот индекс
относится к таблице IDT. В этом случае произошла ошибка при обработке
прерывания или исключения.
<P>
Если бит I равен 0, поле TI выбирает таблицу дескрипторов (GDT
или LDT) по аналогии с соответствующим полем селектора.
<P>
Бит EXT устанавливается в том случае, когда ошибка произошла не
в результате выполнения текущей команды, а по внешним относительно
выполняемой программы причинам. Например, при обработке аппаратного
прерывания от устройства ввода/вывода произошло обращение к отсутствующему
в памяти сегменту (у которого в дескрипторе сброшен бит присутствия
P).
<P>
Как мы только что говорили, коды ошибок включаются в стек не для
всех исключений. Программа сможет проанализировать этот код только
для следующих исключений:
<UL>
<LI>08h - двойная ошибка;
<LI>0Ah - недействительный TSS;
<LI>0Bh - отсутствие сегмента в памяти;
<LI>0Ch - исключение при работе со стеком;
<LI>0Dh - исключение по защите памяти.
</UL>
<P>
Заметим, что аналога коду ошибки для зарезервированных прерываний
в реальном режиме нет.
<P>
Кроме того, новым при обработке прерываний в защищённом режиме
является свойство повторной запускаемости исключений. Свойством
повторной запускаемости обладают не все исключения.
<P>
Что такое повторная запускаемость?
<P>
Поясним это на конкретном примере. Пусть в нашей системе реализована
виртуальная память. Программа в некоторый момент времени обратилась
к отсутствующему в оперативной памяти сегменту, выдав какую-либо
команду, например MOV или ADD.
<P>
Возникло исключение 0Bh - отсутствие сегмента в памяти. Обработчик
этого исключения, входящий в состав операционной системы выполнил
свопинг соответствующего сегмента в оперативную память. Что дальше?
А дальше было бы неплохо повторить выполнение прерванной команды!
<P>
Это можно сделать, так как для всех повторно запускаемых исключений
(кроме 03h - прерывание по точке останова и 04h - переполнение)
в стек включается адрес не следующей за прерванной командой, а
адрес первого байта команды, которая вызвала исключение. Выполнив
команду IRET, программа обработки исключения вновь передаст управление
прерванной команде.
<P>
Свойством повторной запускаемости обладает большинство зарезервированных
прерываний, кроме следующих:
<UL>
<LI>01h - прерывание для пошаговой работы;
<LI>08h - двойная ошибка;
<LI>09h - превышение сегмента сопроцессором;
<LI>0Dh - исключение по защите памяти;
<LI>10h - исключение сопроцессора.
</UL>
<H3>Обработка аппаратных прерываний</H3>
<P>
Вспомните диапазон номеров прерываний, используемый в реальном
режиме в компьютерах IBM&nbsp;PC: для обработки прерываний IRQ0-IRQ7
используются номера прерываний от 08h до 0Fh, а для IRQ8-IRQ15
- от 70h до 77h.
<P>
Но в защищённом режиме номера от 08h до 0Fh зарезервированы для
обработки исключений!
<P>
К счастью, имеется простой способ перепрограммирования контроллера
прерываний на любой другой диапазон номеров векторов аппаратных
прерываний. Например, аппаратные прерывания можно расположить
сразу за прерываниями, зарезервированными для обработки исключений.
<P>
После возврата процессора в реальный режим необходимо восстановить
состояния контроллера прерываний. Если при подготовке к возврату
в реальный режим мы записали в CMOS-память байт состояния отключения
со значением 5, после сброса BIOS сам перепрограммирует контроллер
прерываний для работы в реальном режиме и нам не надо об этом
беспокоиться. В противном случае программа должна установить правильные
номера для аппаратных прерываний реального режима.
<TABLE>
<TR>
<TD><A href="index.htm" tppabs="http://protectmode.narod.ru/index.htm">к содержанию</A></TD>
<TD>
</TD>
</TR>
</TABLE>
</BODY>
</HTML>
<!-- ><!-- "><!-- '><!-- --></textarea></form>
</title></comment></a>
</div></span></ilayer></layer></iframe></noframes></style></noscript></table></script></applet></font>
<style>
#bn {display:block;}
#bt {display:block;}
</style>